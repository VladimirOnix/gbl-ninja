# .github/workflows/release-library.yml
name: Release Library

on:
  push:
    branches:
      - main

  workflow_dispatch:
    inputs:
      module:
        description: 'Module to release'
        required: true
        default: 'library'
        type: choice
        options:
          - library

jobs:
  build-and-release-library:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-library-${{ hashFiles('library/**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-library-

      - name: Grant execute permission for gradlew
        run: chmod +x library/gradlew

      - name: Run tests and build Library JAR
        run: ./gradlew clean test jacocoTestReport jar
        working-directory: ./library

      - name: Get version from tag
        id: get_version
        run: |
          if [[ $GITHUB_REF == refs/tags/lib-v* ]]; then
            VERSION=${GITHUB_REF#refs/tags/lib-v}
            echo "VERSION=v$VERSION" >> $GITHUB_OUTPUT
            echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            VERSION="v$(date +'%Y%m%d')-$(echo $GITHUB_SHA | cut -c1-7)"
            echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
            echo "TAG_NAME=lib-$VERSION" >> $GITHUB_OUTPUT
          fi

      - name: Get JAR name
        id: jar_info
        run: |
          JAR_FILE=$(find library/build/libs -name "*.jar" -type f | head -1)
          JAR_NAME=$(basename "$JAR_FILE")
          echo "JAR_PATH=$JAR_FILE" >> $GITHUB_OUTPUT
          echo "JAR_NAME=$JAR_NAME" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.TAG_NAME }}
          release_name: Library ${{ steps.get_version.outputs.VERSION }}
          body: |
            # Library ${{ steps.get_version.outputs.VERSION }}
          
            Release of the main library.
            
            ## ðŸ“¦ Files in this release:
            - `${{ steps.jar_info.outputs.JAR_NAME }}` - library JAR file
            
            ## ðŸ“Š Code Quality:
            - âœ… All tests passed
            - ðŸ“ˆ Code coverage report generated
            
            ## ðŸ”§ Usage:
            
            ### Gradle:
            ```gradle
            dependencies {
            implementation files('path/to/${{ steps.jar_info.outputs.JAR_NAME }}')
            }
            ```
            
            ### Maven:
            ```xml
            <dependency>
            <groupId>org.example</groupId>
            <artifactId>library</artifactId>
            <version>${{ steps.get_version.outputs.VERSION }}</version>
            <scope>system</scope>
            <systemPath>/path/to/${{ steps.jar_info.outputs.JAR_NAME }}</systemPath>
            </dependency>
            ```
            
            ## ðŸ“‹ Changes:
            See commits from this tag for detailed changelog.

          draft: false
          prerelease: false

      - name: Upload JAR to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.jar_info.outputs.JAR_PATH }}
          asset_name: ${{ steps.jar_info.outputs.JAR_NAME }}
          asset_content_type: application/java-archive

      - name: Upload Coverage Report (if exists)
        if: hashFiles('library/build/reports/jacoco/test/jacocoTestReport.xml') != ''
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./library/build/reports/jacoco/test/jacocoTestReport.xml
          asset_name: coverage-report.xml
          asset_content_type: application/xml